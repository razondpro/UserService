// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Events.Users
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// A user was created
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.3")]
	public partial class UserCreated : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""UserCreated"",""doc"":""A user was created"",""namespace"":""Events.Users"",""fields"":[{""name"":""Email"",""doc"":""The int type is a 32-bit signed integer."",""type"":""string""},{""name"":""UserName"",""doc"":""The double type is a double precision (64-bit) IEEE 754 floating-point number."",""type"":""string""}]}");
		/// <summary>
		/// The int type is a 32-bit signed integer.
		/// </summary>
		private string _Email;
		/// <summary>
		/// The double type is a double precision (64-bit) IEEE 754 floating-point number.
		/// </summary>
		private string _UserName;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return UserCreated._SCHEMA;
			}
		}
		/// <summary>
		/// The int type is a 32-bit signed integer.
		/// </summary>
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				this._Email = value;
			}
		}
		/// <summary>
		/// The double type is a double precision (64-bit) IEEE 754 floating-point number.
		/// </summary>
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				this._UserName = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Email;
			case 1: return this.UserName;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Email = (System.String)fieldValue; break;
			case 1: this.UserName = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
